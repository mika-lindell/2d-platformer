var Ninja,__hasProp={}.hasOwnProperty,__extends=function(t,e){function r(){this.constructor=t}for(var n in e)__hasProp.call(e,n)&&(t[n]=e[n]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};Ninja=function(t){function e(t,r,n,i){this.player=i,e.__super__.constructor.call(this,t,r,n)}return __extends(e,t),e.prototype.state="CRUISING",e.prototype.subState="IDLE",e.prototype.speed=3,e.prototype.time=0,e.prototype.render=function(t){return t.drawSprite(0,1,this.x,this.y)},e.prototype.cruise=function(t,e){var r,n,i;switch(n=i=0,this.subState){case"RIGHT":n+=this.speed,this.dir="RIGHT";break;case"LEFT":n-=this.speed,this.dir="LEFT"}return--this.time<0&&(r=utils.rand(5),this.time=utils.rand(20,40),this.subState=function(){switch(r){case 0:case 1:return"LEFT";case 2:case 3:return"RIGHT";default:return"IDLE"}}()),this.onLadder&&!this.wasOnLadder&&Math.random()<.5&&(this.state="HUNTING"),e===this.y&&(this.state="HUNTING"),[n,i]},e.prototype.hunt=function(t,e){var r,n;return r=n=0,e===this.y||this.onTopOfLadder?t>this.x?(r+=this.speed,this.dir="RIGHT"):(r-=this.speed,this.dir="LEFT"):this.onLadder?(!this.onTopOfLadder&&e<this.y&&(n-=this.speed),e>this.y&&(n+=this.speed)):(this.state="CRUISING",this.subState="LEFT"),[r,n]},e.prototype.update=function(){var t,e,r,n,i;return i=function(){var r;if(this.falling)return[0,0];switch(r=this.player,t=r.x,e=r.y,this.state){case"CRUISING":return this.cruise(t,e);case"HUNTING":return this.hunt(t,e)}}.call(this),r=i[0],n=i[1],this.move(r,n)},e}(Entity);